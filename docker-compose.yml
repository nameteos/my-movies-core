services:
  postgres:
    image: postgres:16-alpine
    container_name: my-movies-go-postgres
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-movieapp}"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7-jammy
    container_name: my-movies-go-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-movies-go-app
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    env_file: .env
    environment:
      # Override host settings for Docker networking
      POSTGRES_HOST: postgres
      MONGODB_URI: mongodb://mongodb:27017
    ports:
      - "8080:8080"

volumes:
  postgres_data:
  mongodb_data: